{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\..\\..\\..\\..\\..\\..\\Windows\\System32\\App.svelte"
  ],
  "sourcesContent": [
    "<!-- Default layout -->\n<!-- Component -->\n<svelte:head>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,600,700\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto+Mono\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</svelte:head>\n\n<script>\n    export let client, server\n    import Drawer, {AppContent, Content, Header, Title, Subtitle, Scrim} from '@smui/drawer'\n    import Button, {Label} from '@smui/button'\n    import List, {Item, Text, Graphic, Separator, Subheader} from '@smui/list'\n    import TopAppBar, {Row, Section, Title as AppTitle, FixedAdjust} from '@smui/top-app-bar';\n    import IconButton from '@smui/icon-button';\n    let drawer\n    let drawerIsOpen = false\n    client.menu = {\n        active: undefined,\n        title: undefined,\n        subtitle: undefined,\n        entries: undefined\n    }\n    function select (menuEntry) {\n        client.menu.active = menuEntry.id\n        if (menuEntry.action) {\n            menuEntry.action(menuEntry)\n        }\n        if (menuEntry.url) {\n            client.open(url, menuEntry.data)\n        }\n        drawerIsOpen = false\n    }\n</script>\n\n<style>\n    :global(body) {\n        margin: 0;\n    }\n    .page-content {\n        margin: 0px 16px 16px 16px;\n    }\n</style>\n\n<!-- Menu drawer -->\n<Drawer variant=\"modal\" bind:this={drawer} bind:open={drawerIsOpen}>\n    {#if client.menu.title || client.menu.subtitle}\n        <Header>\n            <slot name = \"menuHeader\">\n                {#if client.menu.title}\n                    <Title>{client.menu.title}</Title>\n                {/if}\n                {#if client.menu.subtitle}\n                    <Subtitle>{client.menu.subtitle}</Subtitle>\n                {/if}\n            </slot>\n        </Header>\n    {/if}\n    <Content>\n      <List>\n        <slot name=menu>\n            {#if client.menu.entries}\n                {#each client.menu.entries as menuEntry}\n                    <Item href=\"javascript:void(0)\" on:click={() => select(menuEntry)} activated={client.menu.active === menuEntry.id}>\n                        {#if menuEntry.icon}\n                            <Graphic class=\"material-icons\" aria-hidden=\"true\">{menuEntry.icon}</Graphic>\n                        {/if}\n                        <Text>{menuEntry.text}</Text>\n                    </Item>\n                {/each}\n            {/if}\n        </slot>\n      </List>\n    </Content>\n</Drawer>\n<Scrim />\n\n<!-- App-Bar (top) -->\n<TopAppBar variant=\"fixed\" color='primary'>\n    <Row>\n      <Section>\n        <IconButton on:click=\"{() => drawerIsOpen = !drawerIsOpen}\" class=\"material-icons\">menu</IconButton>\n        <AppTitle>{client.title}</AppTitle>\n      </Section>\n    </Row>\n</TopAppBar>\n    \n<!-- App content -->\n<AppContent>\n\n    <!-- Page Content -->\n    <div use:FixedAdjust class=\"page-content\">\n        <main>\n            <slot>\n                <!-- Default slot -->\n            </slot>\n        </main>\n    </div>\n        \n</AppContent>"
  ],
  "names": [],
  "mappings": "AAqCY,IAAI,AAAE,CAAC,AACX,MAAM,CAAE,CAAC,AACb,CAAC,AACD,aAAa,eAAC,CAAC,AACX,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,AAC9B,CAAC"
}